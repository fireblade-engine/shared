name: Linux

on:
  workflow_call:

env:
  RUN_TESTS: true

jobs:
  SPM-Linux:
    name: Linux Swift ${{ matrix.swift_version }} [${{ matrix.build_config }}]
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        swift_version: # https://hub.docker.com/_/swift/tags
          - "6.0.3"
          - "5.10.1"
        build_config:
          - debug
          - release
    container:
      image: swift:${{ matrix.swift_version }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache SPM dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/org.swift.swiftpm
            .build/artifacts
            .build/checkouts
            .build/repositories
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Prepare
        run: |
          apt update
          apt install jq -y
          jq --version
          TARGET_TYPES=$(swift package describe --type json | jq '.targets[].type')
          HAS_TESTS=$(echo $TARGET_TYPES | grep -q "test" && echo true || echo false)
          echo "RUN_TESTS=$HAS_TESTS" >> $GITHUB_ENV

      - name: Build
        run: |
          swift build -c ${{ matrix.build_config }}

      - name: Test
        if: env.RUN_TESTS == true
        run: |
          swift test -c ${{ matrix.build_config }}

      - name: Upload failure artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ github.job }}-swift_${{ matrix.swift_version }}-${{ matrix.build_config }}-${{ github.run_id }}
          path: |
            .build
          if-no-files-found: warn
          include-hidden-files: true
